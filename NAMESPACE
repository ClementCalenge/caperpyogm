import(dplyr,ggplot2,rjags)
importFrom("stats", "aggregate", "dbinom", "density", "median",
           "quantile", "rbeta", "rbinom", "rnorm", "rpois", "sd", "runif")
importFrom("utils", "capture.output", "object.size", "str")
importFrom("rlang", ".data")
importFrom("MCMCvis", "MCMCchains")
importFrom("purrr", "map", "map_chr","map_int")
importFrom("tidyr", "gather")


S3method(predict, caperpySim)
S3method(predict, caperpyGridSim)
S3method(print, caperpyData)
S3method(print, caperpyGridData)
S3method(print, caperpySim)
S3method(print, caperpyGridSim)
S3method(print, CVModelCount)
S3method(print, estimateMales)
S3method(print, LLCountsSim)
S3method(residuals, caperpySim)
S3method(summary, estimateMales)


export(changeRate)
export(dataCount2jags)
export(datagrid2jags)
export(distritime)
export(elpdLeks)
export(estimateNmales)
export(fitModelCount)
export(fitModelGrid)
export(getTotal)
export(kfoldCVModelCount)
export(LLCount)
export(predict.caperpySim)
export(predict.caperpyGridSim)
export(print.caperpyData)
export(print.caperpyGridData)
export(print.caperpySim)
export(print.caperpyGridSim)
export(print.CVModelCount)
export(print.estimateMales)
export(print.LLCountsSim)
export(residuals.caperpySim)
export(restartCV)
export(showChangeRate)
export(simulateModelCount)
export(simulateModelGrid)
export(simulateDataList)
export(simulateN)
export(simulateDataList2)
export(summary.estimateMales)
